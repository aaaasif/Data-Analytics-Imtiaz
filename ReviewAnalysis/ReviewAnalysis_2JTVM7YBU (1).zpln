{
  "paragraphs": [
    {
      "text": "%pyspark\nfrom pyspark import HiveContext\nfrom pyspark.sql import SparkSession\nhc = HiveContext(sc)\ndf = hc.table('review')\ndf.show()\n",
      "user": "anonymous",
      "dateUpdated": "2024-03-12T18:31:46+0600",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "+--------------------+--------------------+--------------------+---------+----------+---------+--------+--------------------+-------------------+----------+\n|           review_id|         rev_user_id|     rev_business_id|rev_stars|rev_useful|rev_funny|rev_cool|            rev_text|      rev_timestamp|  rev_date|\n+--------------------+--------------------+--------------------+---------+----------+---------+--------+--------------------+-------------------+----------+\n|KU_O5udG6zpxOg-Vc...|mh_-eMZ6K5RLWhZyI...|XQfwVwDr-v0ZS3_Cb...|        3|         0|        0|       0|If you decide to ...|2018-07-07 22:09:11|2018-07-07|\n|BiTunyQ73aT9WBnpR...|OyoGAe7OKpv6SyGZT...|7ATYjTIgM3jUlt4UM...|        5|         1|        0|       1|I've taken a lot ...|2012-01-03 15:28:18|2012-01-03|\n|saUsX_uimxRlCVr67...|8g_iMtfSiwikVnbP2...|YjUWPpI6HXG530lwP...|        3|         0|        0|       0|Family diner. Had...|2014-02-05 20:30:30|2014-02-05|\n|AqPFMleE6RsU23_au...|_7bHUi9Uuf5__HHc_...|kxX2SOes4o-D3ZQBk...|        5|         1|        0|       1|Wow!  Yummy, diff...|2015-01-04 00:01:03|2015-01-04|\n|Sx8TMOWLNuJBWer-0...|bcjbaE6dDog4jkNY9...|e4Vwtrqf-wpJfwesg...|        4|         1|        0|       1|Cute interior and...|2017-01-14 20:54:15|2017-01-14|\n|JrIxlS1TzJ-iCu79u...|eUta8W_HdHMXPzLBB...|04UD14gamNjLY0IDY...|        1|         1|        2|       1|I am a long term ...|2015-09-23 23:10:31|2015-09-23|\n|6AxgBCNX_PNTOxmbR...|r3zeYsv1XFBRA4dJp...|gmjsEdUsKpj9Xxu6p...|        5|         0|        2|       0|Loved this tour! ...|2015-01-03 23:21:18|2015-01-03|\n|_ZeMknuYdlQcUqng_...|yfFzsLmaWF2d4Sr0U...|LHSTtnW3YHCeUkRDG...|        5|         2|        0|       0|Amazingly amazing...|2015-08-07 02:29:16|2015-08-07|\n|ZKvDG2sBvHVdF5oBN...|wSTuiTk-sKNdcFypr...|B5XSoSG3SfvQGtKEG...|        3|         1|        1|       0|This easter inste...|2016-03-30 22:46:33|2016-03-30|\n|pUycOfUwM8vqX7KjR...|59MxRhNVhU9MYndMk...|gebiRewfieSdtt17P...|        3|         0|        0|       0|Had a party of 6 ...|2016-07-25 07:31:06|2016-07-25|\n|rGQRf8UafX7OTlMNN...|1WHRWwQmZOZDAhp2Q...|uMvVYRgGNXf5boolA...|        5|         2|        0|       0|My experience wit...|2015-06-21 14:48:06|2015-06-21|\n|l3Wk_mvAog6XANIuG...|ZbqSHbgCjzVAqaa7N...|EQ-TZ2eeD_E0BHuvo...|        4|         0|        0|       0|Locals recommende...|2015-08-19 14:31:45|2015-08-19|\n|XW_LfMv0fV21l9c6x...|9OAtfnWag-ajVxRbU...|lj-E32x9_FA7GmUrB...|        4|         0|        0|       0|Love going here f...|2014-06-27 22:44:01|2014-06-27|\n|8JFGBuHMoiNDyfcxu...|smOvOajNG0lS4Pq7d...|RZtGWDLCAtuipwaZ-...|        4|         0|        0|       0|Good food--loved ...|2009-10-14 19:57:14|2009-10-14|\n|UBp0zWyH60Hmw6Fsa...|4Uh27DgGzsp6PqrH9...|otQS34_MymijPTdNB...|        4|         0|        2|       0|The bun makes the...|2011-10-27 17:12:05|2011-10-27|\n|OAhBYw8IQ6wlfw1ow...|1C2lxzUo1Hyye4RFI...|BVndHaLihEYbr76Z0...|        5|         0|        0|       0|Great place for b...|2014-10-11 16:22:06|2014-10-11|\n|oyaMhzBSwfGgemSGu...|Dd1jQj7S-BFGqRbAp...|YtSqYv1Q_pOltsVPS...|        5|         0|        0|       0|Tremendous servic...|2013-06-24 11:21:25|2013-06-24|\n|LnGZB0fjfgeVDVz5I...|j2wlzrntrbKwyOcOi...|rBdG_23USc7DletfZ...|        4|         1|        0|       0|The hubby and I h...|2014-08-10 19:41:43|2014-08-10|\n|u2vzZaOqJ2feRshaa...|NDZvyYHTUWWu-kqgQ...|CLEWowfkj-wKYJlQD...|        5|         2|        0|       1|I go to blow bar ...|2016-03-07 00:02:18|2016-03-07|\n|Xs8Z8lmKkosqW5mw_...|IQsF3Rc6IgCzjVV9D...|eFvzHawVJofxSnD7T...|        5|         0|        0|       0|My absolute favor...|2014-11-12 15:30:27|2014-11-12|\n+--------------------+--------------------+--------------------+---------+----------+---------+--------+--------------------+-------------------+----------+\nonly showing top 20 rows\n\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://node-master:4040/jobs",
              "$$hashKey": "object:49673"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1710246312686_1570358255",
      "id": "paragraph_1710246312686_1570358255",
      "dateCreated": "2024-03-12T18:25:12+0600",
      "dateStarted": "2024-03-12T18:31:46+0600",
      "dateFinished": "2024-03-12T18:31:50+0600",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:49407"
    },
    {
      "text": "%pyspark\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.functions import year, count\nhc = HiveContext(sc)\ndf = hc.table('review')\n\n# Calculate the yearly review count based on the 'rev_date' column\nyearly_review_count = df.withColumn(\"year\", year(df[\"rev_date\"])) \\\n    .groupBy(\"year\") \\\n    .agg(count(\"review_id\").alias(\"review_count\")) \\\n    .orderBy(\"year\", ascending=False)  # Sort by year in descending order\n\n# Show the results\nz.show(yearly_review_count)",
      "user": "anonymous",
      "dateUpdated": "2024-03-13T06:33:18+0600",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "pieChart",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "year": "string",
                      "review_count": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "year",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "review_count",
                  "index": 1,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "year\treview_count\n2022\t31665\n2021\t618189\n2020\t554557\n2019\t907284\n2018\t906362\n2017\t820048\n2016\t758882\n2015\t688415\n2014\t522275\n2013\t383950\n2012\t286570\n2011\t230813\n2010\t138587\n2009\t74387\n2008\t48226\n2007\t15363\n2006\t3853\n2005\t854\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://node-master:4040/jobs",
              "$$hashKey": "object:52432"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1710246706098_1829892427",
      "id": "paragraph_1710246706098_1829892427",
      "dateCreated": "2024-03-12T18:31:46+0600",
      "dateStarted": "2024-03-12T18:56:00+0600",
      "dateFinished": "2024-03-12T18:56:41+0600",
      "status": "FINISHED",
      "$$hashKey": "object:49408"
    },
    {
      "text": "%pyspark\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.functions import year, sum\nhc = HiveContext(sc)\ndf = hc.table('review')\n# Extract the year from the 'rev_date' column\ndf = df.withColumn(\"year\", year(df[\"rev_date\"]))\n\n# Group by year and summarize the counts of helpful, funny, and cool reviews\nsummary_by_year = df.groupBy(\"year\") \\\n    .agg(sum(\"rev_useful\").alias(\"total_helpful_reviews\"),\n         sum(\"rev_funny\").alias(\"total_funny_reviews\"),\n         sum(\"rev_cool\").alias(\"total_cool_reviews\")) \\\n    .orderBy(\"year\", ascending=False)  # Sort by year in descending order\n\n# Show the results\nz.show(summary_by_year)\n",
      "user": "anonymous",
      "dateUpdated": "2024-03-13T06:35:22+0600",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "pieChart",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "year": "string",
                      "total_helpful_reviews": "string",
                      "total_funny_reviews": "string",
                      "total_cool_reviews": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default",
                  "stacked": false
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "year",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "total_helpful_reviews",
                  "index": 1,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "year\ttotal_helpful_reviews\ttotal_funny_reviews\ttotal_cool_reviews\n2022\t20133\t5336\t14396\n2021\t530660\t133343\t301697\n2020\t554763\t138405\t296789\n2019\t864812\t207964\t426637\n2018\t907978\t211725\t415569\n2017\t848693\t223733\t350207\n2016\t892662\t237509\t353781\n2015\t879629\t242321\t315264\n2014\t751393\t202865\t235002\n2013\t608903\t170894\t184860\n2012\t470101\t140431\t154390\n2011\t388054\t133993\t146496\n2010\t255340\t102694\t110642\n2009\t154609\t67795\t84198\n2008\t115707\t49281\t73070\n2007\t30013\t11378\t18423\n2006\t6331\t2661\t3553\n2005\t967\t415\t502\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://node-master:4040/jobs",
              "$$hashKey": "object:53411"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1710246914224_125103838",
      "id": "paragraph_1710246914224_125103838",
      "dateCreated": "2024-03-12T18:35:14+0600",
      "dateStarted": "2024-03-12T19:04:04+0600",
      "dateFinished": "2024-03-12T19:04:51+0600",
      "status": "FINISHED",
      "$$hashKey": "object:49409"
    },
    {
      "text": "%pyspark\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.functions import countDistinct, year, desc\nfrom pyspark.sql import HiveContext\n# Create a HiveContext\nhc = HiveContext(spark.sparkContext)\n\n# Load the review dataset from Hive\ndf = hc.table('review')\n\n# Extract the year from the 'rev_date' column\ndf = df.withColumn(\"year\", year(df[\"rev_date\"]))\n\n# Group by user_id and year, and count the number of reviews\nuser_yearly_reviews = df.groupBy(\"rev_user_id\", \"year\") \\\n    .agg(countDistinct(\"review_id\").alias(\"total_reviews\"))\n\n# Define a window specification to rank users within each year based on total reviews\nwindow_spec = Window.partitionBy(\"year\").orderBy(desc(\"total_reviews\"))\n\n# Add a rank column based on total_reviews within each year\nuser_ranking = user_yearly_reviews.withColumn(\"rank\", dense_rank().over(window_spec))\n\n# Limit the number of rows to display\nuser_ranking_limit = user_ranking.limit(10)\n\n# Show the results\nz.show(user_ranking_limit.orderBy(\"year\", \"rank\"))\n",
      "user": "anonymous",
      "dateUpdated": "2024-03-13T06:38:08+0600",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "rev_user_id0",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "year1",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "total_reviews2",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "rank3",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "rev_user_id": "string",
                      "year": "string",
                      "total_reviews": "string",
                      "rank": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "pieChart": {}
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "rev_user_id",
                  "index": 0,
                  "aggr": "sum"
                },
                {
                  "name": "total_reviews",
                  "index": 2,
                  "aggr": "sum"
                },
                {
                  "name": "year",
                  "index": 1,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "rank",
                  "index": 3,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "rev_user_id\tyear\ttotal_reviews\trank\nwXdbkFZsfDR7utJvbWElyA\t2018\t367\t1\nfr1Hz2acAb3OaL3l6DyKNg\t2018\t203\t2\nvFd8aBLg1kFcd0kCkoi-xw\t2018\t189\t3\nWwulXySQN8t2hwqH_yWurA\t2018\t183\t4\ngv0coNUFY-fibRwP8IKqPA\t2018\t179\t5\n4YyJpeAr6jsY0FaIbLiTSQ\t2018\t178\t6\n-G7Zkl1wIWBBmD0KRy_sCw\t2018\t177\t7\n8VPCVY70TcE353gRruotWQ\t2018\t173\t8\nvmUqcqMjlWoBM6qfmUXgyQ\t2018\t170\t9\nxSlBsTTPtPvwlclBIvAjYw\t2018\t166\t10\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://node-master:4040/jobs",
              "$$hashKey": "object:54033"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1710248857129_300412893",
      "id": "paragraph_1710248857129_300412893",
      "dateCreated": "2024-03-12T19:07:37+0600",
      "dateStarted": "2024-03-12T22:17:25+0600",
      "dateFinished": "2024-03-12T22:19:09+0600",
      "status": "FINISHED",
      "$$hashKey": "object:49410"
    },
    {
      "text": "%pyspark\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.functions import countDistinct, year, desc, first\nfrom pyspark.sql import HiveContext\n\n# Create a HiveContext\nhc = HiveContext(spark.sparkContext)\n\n# Load the review dataset from Hive\ndf = hc.table('review')\n\n# Extract the yea\nr from the 'rev_date' column\ndf = df.withColumn(\"year\", year(df[\"rev_date\"]))\n\n# Group by user_id and year, and count the number of reviews\nuser_yearly_reviews = df.groupBy(\"rev_user_id\", \"year\") \\\n    .agg(countDistinct(\"review_id\").alias(\"total_reviews\"))\n\n# Define a window specification to rank users within each year based on total reviews\nwindow_spec = Window.partitionBy(\"year\").orderBy(desc(\"total_reviews\"))\n\n# Add a rank column based on total_reviews within each year\nuser_ranking = user_yearly_reviews.withColumn(\"rank\", dense_rank().over(window_spec))\n\n# Select the top reviewer (first row) for each year\ntop_reviewers_by_year = user_ranking.filter(\"rank == 1\")\n\n# Show the results\nz.show(top_reviewers_by_year.orderBy(\"year\"))\n",
      "user": "anonymous",
      "dateUpdated": "2024-03-13T06:42:08+0600",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "pieChart",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "rev_user_id": "string",
                      "year": "string",
                      "total_reviews": "string",
                      "rank": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "year",
                  "index": 1,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "total_reviews",
                  "index": 2,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "rev_user_id\tyear\ttotal_reviews\trank\nn-lBS02-3yvlY5Q91mmwDA\t2005\t171\t1\ngfQqQYI5_hCAGEHlHXIz2Q\t2006\t137\t1\n0yYCMhDWCEIVUyZLzDWwqQ\t2007\t316\t1\nbnVzSHI48lEHPaEzZNIqJg\t2008\t413\t1\n_BcWyKQL16ndpBdggh2kNA\t2009\t407\t1\nf9lq4KAus-xCsmJmjXeKVw\t2010\t381\t1\n1HM81n6n4iPIFU5d2Lokhw\t2011\t292\t1\n1HM81n6n4iPIFU5d2Lokhw\t2012\t413\t1\nzYFGMy1_thjMnvQLX6JNBw\t2013\t331\t1\nEQpFHqGT9Tk6YSwORTtwpg\t2014\t287\t1\nvYMvOTL31e0KbTo9Hd0tjg\t2015\t343\t1\nB1OVDsstzC_RaESmtd1oWQ\t2016\t355\t1\nqcf3A5mtPntTmmSfADo6tg\t2017\t302\t1\nwXdbkFZsfDR7utJvbWElyA\t2018\t367\t1\nwXdbkFZsfDR7utJvbWElyA\t2019\t400\t1\nSp2GV7D-_JLZMPQmDanzPQ\t2020\t216\t1\nxalgcjscRLNPuyaAeKNThA\t2021\t242\t1\nvjLQ8F8opdDXGyXISRnuYQ\t2022\t39\t1\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {
        "jobUrl": {
          "propertyName": "jobUrl",
          "label": "SPARK JOB",
          "tooltip": "View in Spark web UI",
          "group": "spark",
          "values": [
            {
              "jobUrl": "http://node-master:4040/jobs",
              "$$hashKey": "object:54614"
            }
          ],
          "interpreterSettingId": "spark"
        }
      },
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1710256175361_1338729416",
      "id": "paragraph_1710256175361_1338729416",
      "dateCreated": "2024-03-12T21:09:35+0600",
      "dateStarted": "2024-03-12T21:20:51+0600",
      "dateFinished": "2024-03-12T21:23:07+0600",
      "status": "FINISHED",
      "$$hashKey": "object:49411"
    },
    {
      "text": "%pyspark\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.functions import explode, split, lower, regexp_replace\nfrom pyspark.sql.functions import desc\n\n# Load the review dataset from Hive\nhc = HiveContext(spark.sparkContext)\ndf = hc.table('review')\n\n# Tokenize the reviews into individual words\nwords_df = df.select(explode(split(lower(regexp_replace(\"rev_text\", \"[^a-zA-Z\\\\s]\", \"\")), \"\\\\s+\")).alias(\"word\"))\n\n# Filter out common stopwords if needed\n# stopwords = [\"the\", \"and\", \"of\", \"a\", \"to\", \"in\", ...]\n# words_df = words_df.filter(~words_df[\"word\"].isin(stopwords))\n\n# Count the occurrences of each word in the entire dataset\nword_count_df = words_df.groupBy(\"word\").count()\n\n# Sort the words by their frequency in descending order\ntop_words_df = word_count_df.orderBy(desc(\"count\"))\n\n# Show the top 20 most common words using z.show()\nz.show(top_words_df, limit=20)\n",
      "user": "anonymous",
      "dateUpdated": "2024-03-13T07:18:45+0600",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {
          "0": {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "word0",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "count1",
                        "visible": true,
                        "width": "*",
                        "sort": {
                          "priority": 0,
                          "direction": "desc"
                        },
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1,
                      "paginationPageSize": 250
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "word": "string",
                      "count": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "word",
                  "index": 0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "count",
                  "index": 1,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1710291056398_2057475588",
      "id": "paragraph_1710291056398_2057475588",
      "dateCreated": "2024-03-13T06:50:56+0600",
      "status": "FINISHED",
      "focus": true,
      "$$hashKey": "object:54908",
      "dateFinished": "2024-03-13T07:06:05+0600",
      "dateStarted": "2024-03-13T06:51:13+0600",
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "word\tcount\nthe\t36711363\nand\t26130618\ni\t18989299\na\t18805836\nto\t17718125\nwas\t13446475\nof\t10407788\nit\t8900451\nfor\t8678051\nis\t8664220\nin\t8230734\nmy\t7024184\nwe\t6317028\nwith\t6078524\nthat\t6034531\nthey\t5911040\nthis\t5845148\nbut\t5444607\non\t5132305\nyou\t4938295\nhad\t4567115\nhave\t4538068\nnot\t4452270\nwere\t4213162\nso\t3909980\nfood\t3595656\nare\t3590088\nat\t3530307\ngood\t3277585\nbe\t3226656\nplace\t3153865\ngreat\t3055940\nas\t3026292\nvery\t2904981\nme\t2785965\nthere\t2683830\nour\t2586643\nout\t2518054\nall\t2499142\nif\t2434118\nhere\t2323943\nservice\t2296961\njust\t2254426\ntime\t2230436\nlike\t2166201\nget\t2117153\none\t2112498\nfrom\t2102349\ntheir\t2087671\nits\t2078831\nwhen\t2029156\nback\t2024895\nwould\t1973805\nan\t1927535\nor\t1882304\nup\t1882083\ngo\t1740968\nwill\t1725700\nabout\t1709852\nwhich\t1630269\nreally\t1600200\nshe\t1587204\nbeen\t1572596\nhe\t1570832\nno\t1563166\nwhat\t1540192\nalso\t1505049\nsome\t1433737\nyour\t1427126\nus\t1386023\nthem\t1380003\nonly\t1359707\nmore\t1355454\ngot\t1349984\nby\t1327110\ncan\t1309978\nbecause\t1290517\neven\t1223679\nnice\t1215974\nbest\t1210991\ndont\t1210343\nwell\t1203387\ndo\t1180162\nafter\t1154810\nother\t1154707\nordered\t1151679\nhas\t1133050\nstaff\t1129668\nim\t1125419\norder\t1123286\nive\t1095590\ndid\t1069339\ntoo\t1056585\nalways\t1044627\ncame\t1027890\nlove\t1027506\ndidnt\t1023906\nfriendly\t1018283\ndelicious\t1013027\nfirst\t1002603\nrestaurant\t999428\nnever\t990642\nwent\t966652\ncould\t962082\nchicken\t960585\nthan\t949762\ndefinitely\t945309\nlittle\t944159\ntry\t934970\nover\t902588\nher\t901303\nexperience\t896036\npeople\t891130\nnew\t884888\nagain\t883674\namazing\t880008\nmenu\t866727\ncome\t861199\nmuch\t853248\nmade\t852830\nthen\t832025\nmake\t819087\nwho\t791213\nsaid\t790316\nhow\t772737\ntwo\t770352\nday\t770285\nrecommend\t762570\ngoing\t751551\nwait\t751360\nbar\t743435\nknow\t739534\noff\t738770\nway\t728188\nam\t722169\nbefore\t719476\nbetter\t716339\npretty\t700350\never\t694355\nany\t693604\nright\t688961\neverything\t686192\nwhile\t668579\ntake\t666854\ncheese\t661503\npizza\t659263\nwant\t654916\ntold\t653133\nnight\t651611\nfresh\t651552\narea\t648090\nstill\t645025\nminutes\t637642\nsure\t637493\naround\t635040\nsay\t630665\ndown\t629965\nfew\t629293\nnow\t620887\ntook\t616546\nsee\t601437\nsauce\t592607\ntable\t591109\ngive\t590906\neat\t589273\nasked\t587185\nnext\t584313\nevery\t583546\ntimes\t582347\nthink\t579814\nanother\t575429\ncant\t567756\nwork\t562256\nhis\t562088\nsince\t561786\nmany\t556660\nboth\t551478\nbeing\t549842\nmost\t549069\nsmall\t545467\nwasnt\t545012\nlocation\t543610\nmeal\t542635\nsalad\t539296\nlunch\t532445\nroom\t531791\nfind\t526495\nlot\t519651\ndrinks\t517312\ndinner\t514876\nsomething\t513592\nbad\t511840\nlast\t508788\nprice\t506199\nbit\t501356\nhome\t498199\nlong\t494447\nexcellent\t492698\ntried\t490717\nsuper\t490497\ncustomer\t485689\ninto\t485621\nwhere\t484508\nhot\t478130\nfavorite\t477510\nthough\t475757\nwanted\t466315\nside\t464029\nawesome\t462476\nhappy\t462376\nlooking\t455840\nclean\t454265\nworth\t453696\nvisit\t442304\nneed\t440864\ncoffee\t440748\nfeel\t436638\nyears\t435195\nserver\t429615\nshould\t429503\ndifferent\t428271\nbeer\t425827\nsandwich\t424780\natmosphere\t422991\nenough\t421588\nstore\t420353\nyoure\t417545\nthing\t416313\ncalled\t416287\ncar\t415820\nfries\t413919\nthings\t413279\nprices\t411039\nperfect\t407970\ndrink\t404271\nhour\t402782\nleft\t402411\ncheck\t397397\nstars\t397393\naway\t397372\nbig\t397104\nquality\t394767\nfried\t394425\nflavor\t392088\nfound\t391143\nnothing\t389433\ndone\t388699\nspot\t386923\nsweet\t384705\nbreakfast\t384344\nthese\t383540\nsame\t382411\nhighly\t377530\nfriends\t376551\nhim\t374841\ntaste\t371561\nthats\t371387\nburger\t369804\nhowever\t366775\nshrimp\t363214\ntop\t361224\nfamily\t359177\nlook\t355559\nbread\t355266\nthrough\t352522\ntasty\t351536\nfull\t348380\nloved\t347647\nplaces\t345837\nspecial\t345791\neveryone\t344268\nonce\t344169\nbusiness\t344095\nanything\t344079\noverall\t343114\ncall\t339371\nmeat\t338403\nselection\t336554\nold\t336397\neach\t336145\ncoming\t335971\nwhy\t335489\nlarge\t335440\nkind\t335309\ngetting\t333677\nput\t331328\nmanager\t330411\nask\t328333\noutside\t328023\ninside\t326592\ncare\t324706\nfree\t321040\nenjoyed\t319186\nfun\t319048\ngave\t318555\nwithout\t318519\ndecided\t316881\nactually\t315824\nused\t315723\nhusband\t314492\nprobably\t313216\nelse\t312427\ndisappointed\t310615\nreview\t309694\nthought\t309208\nwonderful\t309180\nill\t309125\nbusy\t308250\nid\t307964\njob\t307894\nhouse\t307890\nfront\t306868\noptions\t306373\nfriend\t306243\nopen\t304830\nparking\t304089\nok\t303760\nabsolutely\t302960\nduring\t302814\nrice\t301751\nhuge\t301242\nsuch\t300579\nuse\t298363\nwaitress\t296472\nline\t296246\nhalf\t295506\ncream\t295251\nitems\t292762\nlooked\t292425\ndish\t292343\nneeded\t291819\npork\t289268\nmaybe\t287745\nlet\t286451\nsushi\t286239\nmoney\t285962\nhelpful\t285718\nquick\t283934\nhaving\t283585\ntown\t282853\nsteak\t281186\nshop\t280424\nwaiting\t280057\ncooked\t279368\nquite\t278649\nweek\t277978\ncouldnt\t277915\ntell\t277756\nfantastic\t276518\nwater\t276231\nwine\t275573\nsoup\t275373\nserved\t274961\nhard\t274781\nenjoy\t273375\nable\t273353\nfish\t272754\nlocal\t272438\nreviews\t272100\nfast\t271820\nthose\t271471\nalmost\t271066\nsomeone\t270769\nhours\t270163\nfar\t269488\ntables\t269357\nfinally\t268094\nwont\t268026\nthree\t267749\nperson\t267414\ncouple\t266739\nseveral\t266538\nhotel\t266099\ntoday\t265325\nowner\t264306\nstop\t262673\nlater\t260639\nusually\t260501\nmust\t259955\npay\t258315\ntasted\t257470\nice\t256233\ntrying\t255948\nextremely\t255631\n\t252761\nspicy\t252209\nwhole\t251176\nhigh\t250843\ndays\t250837\nleast\t250565\nstreet\t250126\ndishes\t249584\ncold\t248961\nespecially\t247381\nwalked\t245430\nfelt\t245085\nuntil\t244992\nreturn\t244593\nhelp\t243201\nbeef\t242743\nwrong\t242650\ndoor\t241885\nstar\t241089\npart\t240853\ntacos\t239298\nsecond\t238269\npoint\t238210\ncool\t238129\nwife\t236951\nhair\t236757\neating\t236075\nyear\t235995\nbrought\t235622\nrestaurants\t235041\nless\t233966\nwalk\t233792\npm\t233754\ndining\t232952\nphone\t232529\nclose\t231615\nkeep\t231117\ncustomers\t231113\nseemed\t230763\nend\t230486\ndecent\t229431\nstarted\t229413\ntheres\t228910\ncity\t228078\narrived\t227452\ndoes\t226919\nown\t226384\nmusic\t225242\nbeautiful\t224978\nstay\t223793\nlive\t223292\nextra\t223174\nmay\t221104\nkids\t220597\ndoesnt\t220422\nbring\t219075\nseating\t218065\nwaited\t217119\ndessert\t214190\nmakes\t214025\nanyone\t213166\nattentive\t212135\ninstead\t211485\nworking\t210696\nleave\t210319\nwish\t210271\nsat\t208460\nparty\t208347\ncompany\t208269\nrude\t206821\nthank\t205259\nname\t204777\nisnt\t203393\nseated\t203201\nsit\t202885\nguy\t199752\nwaiter\t199401\npick\t198776\ncomes\t198011\neasy\t197912\ngroup\t197368\nwouldnt\t197261\nproblem\t197035\nlots\t196746\neither\t195898\nwings\t195151\nst\t194591\nquickly\t193689\ndeal\t193415\nyet\t193268\ncourse\t193054\nmaking\t192205\nsaw\t191198\nplate\t190833\ncut\t190373\ndrive\t190258\nstart\t190010\ncrab\t189743\noffer\t189519\nfine\t189499\ncake\t189297\nperfectly\t189113\ndoing\t188953\nstopped\t187408\ntheyre\t186740\nago\t186113\nroll\t184707\nworst\t184468\ntea\t184185\nfrench\t183660\nreal\t183629\nreason\t183501\noh\t182646\namount\t182227\nchocolate\t182141\nred\t181438\nbacon\t180514\nalready\t180456\nplus\t180076\ndog\t178660\nmight\t178482\nreceived\t178284\nalthough\t178175\nchips\t177776\nflavors\t177622\nappointment\t177227\ntrip\t177004\nsize\t176703\nmyself\t175749\nphilly\t175333\nreasonable\t174477\nrolls\t174228\nkitchen\t174061\nsoon\t173622\ndry\t173169\nbrunch\t173139\nprofessional\t173052\nportions\t173048\nyes\t172364\nyelp\t171645\nready\t171441\nseems\t171216\nbbq\t171160\nexpect\t170512\nlate\t170363\nliked\t170361\nate\t170335\nwarm\t169736\nentire\t169410\nemployees\t169010\npast\t168709\nguys\t168091\nmorning\t168008\nregular\t167863\nokay\t167214\nended\t167054\nneeds\t167011\nplenty\t165743\npaid\t164636\nsaturday\t164473\nterrible\t164032\nappetizer\t163063\ngiven\t162977\nspace\t162852\nshort\t162153\ncounter\t160779\nstyle\t160624\nsandwiches\t159763\nmexican\t159656\nimpressed\t159645\navailable\t159352\nfan\t159091\nbuy\t158707\nhorrible\t158166\nvariety\t157023\nglad\t156779\noften\t156091\nmonths\t155347\nseafood\t155257\nordering\t155125\nbeans\t154652\nslow\t154258\nearly\t153944\ndecor\t153773\neggs\t153545\nset\t152991\nbowl\t152814\nfact\t152561\nstuff\t152418\ngreen\t151731\noffered\t151465\nchange\t150736\norleans\t150656\nshow\t150577\ntaking\t150444\nlife\t150380\nexpensive\t149549\ncompletely\t149341\nunder\t148883\nsitting\t148873\nlight\t148153\nlooks\t148103\nwhite\t147850\ndelivery\t147719\ndue\t147704\nrecommended\t147509\nseem\t147497\nnashville\t147351\nlist\t147055\ntwice\t146464\nbelieve\t146424\ngrilled\t146372\nrun\t145635\nbetween\t145527\nkept\t145100\nissue\t144917\nportion\t144523\nsunday\t144450\netc\t144386\ncomfortable\t144009\ncharge\t143819\nthai\t143473\npasta\t143424\nthanks\t142875\nflavorful\t142861\nseen\t142544\nweeks\t141736\norders\t141523\noffice\t141390\nevening\t140897\nknew\t140271\nbill\t139936\nplease\t139867\nothers\t139519\nchoice\t139088\ncrispy\t139075\negg\t138770\nguess\t138629\npotato\t138624\nmind\t138613\nmain\t137849\nbeers\t137804\npotatoes\t137762\nitalian\t137551\ncard\t137446\nyummy\t137435\nweekend\t137420\ncheap\t137193\nheard\t137071\nalong\t136846\nburgers\t136116\nbartender\t135995\npriced\t135674\npleasant\t135120\nbehind\t135025\nserve\t134880\nacross\t134714\naverage\t134588\nbite\t133902\npark\t133515\nrecently\t133418\nbirthday\t133063\nlady\t132671\ncute\t132628\nwalking\t132580\nadd\t132312\nimmediately\t131939\nman\t131794\nliterally\t131427\nunique\t131409\nnails\t131175\ngets\t130290\nhavent\t130247\nfour\t130169\nonline\t129702\nwithin\t129206\nauthentic\t128860\nfloor\t128717\ngarlic\t128540\nrather\t128400\nsalon\t128344\ngone\t128334\nhope\t128133\nunfortunately\t126565\ntaken\t126332\ncost\t125984\nmoved\t125900\nreservation\t125819\nnear\t125797\nunderstand\t125523\nservers\t124942\noption\t124735\nchoose\t124732\nwerent\t124621\nexpected\t124258\nprepared\t124106\ntotally\t124076\ningredients\t123832\nfriday\t123540\nbutter\t123268\ntip\t123214\nsimple\t123022\nyoull\t122967\nitself\t122780\nsaying\t121811\nhit\t121783\nhands\t121306\nfive\t121181\nmac\t121110\ndr\t120983\nsurprised\t120556\nmeals\t120480\nvisiting\t120372\nforward\t120101\nknowledgeable\t120089\ntaco\t120088\ndate\t119929\ntruly\t119563\nrest\t119487\nwow\t119301\nmonth\t118919\nsalsa\t118797\nglass\t118428\ntogether\t118065\npatio\t117862\nhonestly\t117786\noysters\t117503\nnumber\t117473\npacked\t116714\npoor\t116713\nworked\t116202\nopened\t115776\neaten\t115619\noil\t115566\nsometimes\t114961\nhand\t113976\ntype\t113895\ngiving\t113756\nremember\t113742\nminute\t113614\nsides\t113239\nyourself\t113142\nadded\t113076\nblack\t112815\nambiance\t112688\nexactly\t112672\nweve\t112639\ntour\t112310\nbought\t112119\ngirl\t111920\nincredible\t111890\nsalmon\t111304\nappetizers\t110960\nupon\t110849\nsausage\t110778\ntoast\t110651\nexcited\t110497\nbland\t110353\nchef\t109954\nseriously\t109897\nchinese\t109750\nrooms\t109664\nneighborhood\t109662\ntalk\t109536\nboyfriend\t109514\nlonger\t109468\ndesk\t109350\nth\t109129\ndowntown\t109009\nincluding\t108357\nissues\t108172\nbased\t108020\nread\t107595\nhelped\t107308\nworld\t106949\ntender\t106781\ntampa\t106776\nmanagement\t106594\nspecials\t106453\noutdoor\t106453\noutstanding\t106236\nempty\t106203\nsoft\t106183\ncafe\t105941\nlocated\t105936\nclosed\t105808\nfix\t105620\nbeyond\t105618\npieces\t105469\nbuilding\t105461\nchoices\t105082\nquestions\t104486\nchecked\t104440\nabove\t104304\nmove\t104289\ngreeted\t104206\nloud\t104179\ngame\t103538\npie\t103369\nwatch\t103163\nones\t103071\nvisited\t102976\nsign\t102961\nvegan\t102623\nentrees\t102535\ncannot\t102018\ncup\t101946\ncrust\t101888\nnoticed\t101856\nvibe\t101487\ndirty\t101330\nowners\t100928\ncrowded\t100912\ninteresting\t100711\ncenter\t100198\nmassage\t99840\ntreat\t99834\nshowed\t99476\ndaughter\t99284\nspent\t99264\nnoodles\t98672\nwedding\t98572\nsorry\t98006\npiece\t97998\nonion\t97988\nplates\t97598\npulled\t97437\nribs\t97249\nanywhere\t96949\nmiss\t96813\nlovely\t96808\nfeeling\t96503\nidea\t96441\nprocess\t96387\nfair\t96201\narent\t96168\nhappened\t96080\nmultiple\t96044\ncharged\t96043\nturned\t95910\nmean\t95401\nestablishment\t95292\ncorn\t95109\nsimply\t95043\nseat\t95018\nattention\t94948\nsays\t94777\ngrab\t94771\nbuffet\t94745\nlevel\t94655\nlobster\t94613\ncocktails\t94575\nspend\t94484\nnail\t94341\npricey\t94326\nhungry\t94065\npaying\t94005\nfilled\t93852\ntomato\t93559\nsent\t93260\nhear\t93127\nsolid\t92994\npicked\t92929\ndisappointing\t92926\nentree\t92721\nwoman\t92663\nbaked\t92645\ntakes\t92485\ntalking\t92150\nyoung\t91962\nhead\t91513\nsalads\t91350\nmarket\t91030\nchance\t91030\ncredit\t90712\ngem\t90443\nfinish\t90413\nsingle\t89631\nview\t89615\nafternoon\t89545\nasking\t89181\npho\t89096\nhomemade\t88875\ncase\t88863\ntonight\t88464\ngoes\t88453\nincredibly\t88424\nson\t88336\ntoppings\t88252\nshare\t88103\ntasting\t87961\ndelivered\t87929\nstayed\t87780\ncash\t87700\nawful\t87663\nfinished\t87603\nseasoned\t87567\nfuture\t87452\nplan\t87439\nmention\t87197\nlow\t87060\nreturning\t86974\ndogs\t86964\nonions\t86943\nhostess\t86798\nteam\t86332\nbasically\t86237\nreno\t86154\nchanged\t85924\nfilling\t85879\nexplained\t85732\nclearly\t85583\nwindow\t85574\nvegetarian\t85483\nmedium\t85354\nbathroom\t85341\nburrito\t85281\nsouth\t85204\npool\t85150\ntotal\t85110\nsalty\t85078\nnola\t85049\nmouth\t84745\ncertainly\t83905\nmin\t83799\nwelcoming\t83706\nusing\t83662\nbox\t83522\nahead\t83479\nserving\t83434\nchose\t83408\nattitude\t83243\nnote\t83065\nshopping\t82961\ngotten\t82684\ndressing\t82610\nmine\t82422\nitem\t82394\ntuna\t82056\nmiddle\t81957\nmom\t81923\ntrue\t81675\naccommodating\t81663\nwall\t81124\nstandard\t81022\nevent\t80886\ncolor\t80864\nanyway\t80776\nsauces\t80747\neasily\t80592\noverpriced\t80530\nservices\t80297\ntucson\t80250\nemployee\t80011\naddition\t79859\npurchase\t79763\nrunning\t79328\ntruck\t79253\nunless\t79225\nthin\t79111\nleaving\t78916\nwrite\t78833\nveggies\t78587\ns\t78560\nlamb\t78505\npleased\t78390\nbeach\t78304\nplay\t78063\nshared\t77939\nlimited\t77768\nspeak\t77511\ncocktail\t77386\nsomewhere\t77332\nstand\t77280\ntouch\t77278\nper\t77223\nstuffed\t77200\nsalt\t77067\nmixed\t76489\nbed\t76460\ncrowd\t76369\nreservations\t76286\nopinion\t76182\nmins\t76052\ncook\t76014\nmix\t75822\nhealthy\t75676\nfairly\t75660\nslightly\t75490\ntastes\t75466\nvalue\t75449\ndark\t75286\ndespite\t75165\nlouis\t75155\nlack\t75146\nn\t75105\ntiny\t74883\ncurry\t74868\nbottle\t74553\ncrazy\t74546\ntreated\t74456\nmall\t74411\nincluded\t74369\nproducts\t74364\nappreciate\t74352\nface\t74217\ncomplaint\t74209\ntypical\t74138\nwhatever\t74124\nlived\t74084\nfrozen\t74033\ndip\t74018\nsplit\t74013\npersonal\t73990\nforgot\t73820\nmoving\t73619\n"
          },
          {
            "type": "HTML",
            "data": "<div class=\"result-alert alert-warning\" role=\"alert\"><button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button><strong>Output is truncated</strong> to 1000 rows. Learn more about <strong>zeppelin.spark.maxResult</strong></div>\n"
          }
        ]
      }
    },
    {
      "text": "%pyspark\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.functions import explode, lower, split, regexp_extract\nimport networkx as nx\nimport matplotlib.pyplot as plt\n\n# Create a SparkSession\nspark = SparkSession.builder \\\n    .appName(\"Word Relationship Graph\") \\\n    .getOrCreate()\n\n# Load the review dataset from Hive\nhc = HiveContext(spark.sparkContext)\nreviews_df = hc.table('review')\n\n# Select reviews containing the selected words (e.g., Chinese, steak)\nselected_word = \"Chinese\"\nselected_word_reviews_df = reviews_df.filter(lower(reviews_df[\"text\"]).rlike(f\"\\\\b{selected_word.lower()}\\\\b\"))\n\n# Tokenize the reviews into individual words\nwords_df = selected_word_reviews_df.select(explode(split(lower(selected_word_reviews_df[\"text\"]), \"\\\\s+\")).alias(\"word\"))\n\n# Extract surrounding words (context) for each occurrence of the selected word\ncontext_df = words_df.withColumn(\"context_word\", regexp_extract(words_df[\"word\"], f\"(\\\\b{selected_word.lower()}\\\\b)(.*)\", 2))\n\n# Remove empty context words\ncontext_df = context_df.filter(context_df[\"context_word\"] != \"\")\n\n# Count the occurrences of each context word in relation to the selected word\nword_relationship_df = context_df.groupBy(\"context_word\").count()\n\n# Convert the DataFrame to a Pandas DataFrame\nword_relationship_pandas_df = word_relationship_df.toPandas()\n\n# Create a directed graph\nG = nx.DiGraph()\n\n# Add edges to the graph\nfor index, row in word_relationship_pandas_df.iterrows():\n    G.add_edge(selected_word, row[\"context_word\"], weight=row[\"count\"])\n\n# Plot the word relationship graph\nplt.figure(figsize=(10, 8))\npos = nx.spring_layout(G, k=0.5)\nnx.draw(G, pos, with_labels=True, node_size=1000, font_size=10, node_color=\"skyblue\", edge_color=\"gray\", arrows=True)\nedge_labels = nx.get_edge_attributes(G, 'weight')\nnx.draw_networkx_edge_labels(G, pos, edge_labels=edge_labels, font_color='red')\nplt.title(f\"Word Relationship Graph for '{selected_word}'\")\nplt.show()\n\n",
      "user": "anonymous",
      "dateUpdated": "2024-03-12T22:07:32+0600",
      "progress": 0,
      "config": {
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "fontSize": 9,
        "results": {},
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "ERROR",
        "msg": [
          {
            "type": "TEXT",
            "data": "Fail to execute line 4: import networkx as nx\nTraceback (most recent call last):\n  File \"/tmp/python3623611481747857614/zeppelin_python.py\", line 162, in <module>\n    exec(code, _zcUserQueryNameSpace)\n  File \"<stdin>\", line 4, in <module>\nModuleNotFoundError: No module named 'networkx'\n"
          }
        ]
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1710257228393_791448742",
      "id": "paragraph_1710257228393_791448742",
      "dateCreated": "2024-03-12T21:27:08+0600",
      "dateStarted": "2024-03-12T22:07:32+0600",
      "dateFinished": "2024-03-12T22:07:32+0600",
      "status": "ERROR",
      "$$hashKey": "object:49413"
    },
    {
      "text": "%pyspark\n",
      "user": "anonymous",
      "dateUpdated": "2024-03-12T22:04:58+0600",
      "progress": 0,
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "python",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "runtimeInfos": {},
      "progressUpdateIntervalMs": 500,
      "jobName": "paragraph_1710259498132_582979144",
      "id": "paragraph_1710259498132_582979144",
      "dateCreated": "2024-03-12T22:04:58+0600",
      "status": "READY",
      "$$hashKey": "object:49414"
    }
  ],
  "name": "ReviewAnalysis",
  "id": "2JTVM7YBU",
  "defaultInterpreterGroup": "spark",
  "version": "0.10.1",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {},
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {},
  "path": "/ReviewAnalysis"
}